{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/guards/authLoggedIn.guard.ts","./src/app/guards/authLoggedOut.guard.ts","./src/app/app.module.ts","./src/app/services/validate.service.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron jumbotron-fluid \" style = \"margin-top: 70px;\">\n  <div class=\"container\">\n    <h1 class=\"display-5\">MEAN Authentication App</h1>\n      <p class=\"lead \">Welcome to our custom MEAN authentication application built from scratch </p>\n     <div class=\"pt-5\">\n       <a class=\"btn btn-primary\" [routerLink]=\"['/register']\">Register</a> <a class=\"btn btn-dark\" [routerLink]=\"['/login']\">Login</a>\n     </div>\n  </div>\n</div>\n  \n<div class=\"row\">\n  <div class=\"col-md-4\">\n    <h3>Express Backend</h3>\n    <p>A rock solid Node.js/Express server using Mongoose to organize models and query the database</p>\n  </div>\n  <div class=\"col-md-4\">\n    <h3>Angular-CLI</h3>\n    <p>Angular-CLI to generate components, services and more. Local dev server and easy compilation</p>\n  </div>\n  <div class=\"col-md-4\">\n    <h3>JWT Tokens</h3>\n    <p>Full featured authentication using JSON web tokens. Login and store user data</p>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\ninterface User {\n  name: String,\n  username: String,\n  email: String\n}\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: User;\n\n  constructor(    \n    private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(){\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile.user;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n}\n","<div *ngIf=\"user\">\n    <h2 class=\"page-header\"> {{user.name}} </h2>\n        <ul class = \"list-group\">\n            <li class= \"list-group-item\">Username: {{user.username}}</li>\n            <li class= \"list-group-item\">Email: {{user.email}}</li>\n        </ul>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\n<div class='container'>\n    <flash-messages></flash-messages>\n    <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(    \n    private flashMessage: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit(){\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n    this.authService.authenticateUser(user).subscribe(data => {\n      if(data.success){\n        this.authService.storeUserData(data.token, data.user);\n        this.flashMessage.show('You are now Logged IN.', {cssClass: 'alert-success', timeout:3000});\n        this.router.navigate(['/dashboard']);\n\n\n      }else{\n        this.flashMessage.show(data.msg, {cssClass: 'alert-danger', timeout: 5000});\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n\n}\n","<div class=\"pb-4 mt-5 mb-2 border-bottom\">\n    <h1>Login</h1>\n</div>\n<form (submit) = \"onLoginSubmit()\">\n    <div class=\"form-group\">\n        <label>Username:</label>\n        <input type = \"text\" [(ngModel)] = 'username' name = \"username\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Password:</label>\n        <input type = \"password\" [(ngModel)] = 'password' name = \"password\" class=\"form-control\">\n    </div>\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\">\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport {Observable} from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n\n  constructor(\n    private validateService: ValidateService, \n    private flashMessage: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onRegisterSubmit(){\n    const user = {\n      name: this.name,\n      username: this.username,\n      email: this.email,\n      password: this.password \n\n    }\n    if(!this.validateService.validateRegister(user)){\n      this.flashMessage.show('Please fill in all fields.', {cssClass: 'alert-danger', timeout:3000});\n      return false;\n    }\n    if(!this.validateService.validateEmail(user.email)){\n      this.flashMessage.show('Please fill in a valid email', {cssClass: 'alert-danger', timeout:3000});\n      return false;\n    }\n\n    //Register User\n    this.authService.registerUser(user).subscribe(data => {\n      if(data.success){\n        \n        this.flashMessage.show('Thanks for registering, You can now login!!', {cssClass: 'alert-success', timeout:3000});\n        this.router.navigate(['/login']);\n      } else{\n        this.flashMessage.show('Something went wrong, Registration Failed!', {cssClass: 'alert-danger', timeout:3000});\n        this.router.navigate(['/register']);\n      }\n    });\n\n  }\n\n}\n","\n<div class=\"pb-4 mt-5 mb-2 border-bottom\">\n    <h1>Register</h1>\n</div>\n<form (submit)=\"onRegisterSubmit()\">\n    <div class = \"form-group\">\n        <label>Name:</label>\n        <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\">\n    </div>\n    <div class = \"form-group\">\n        <label>Username:</label>\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\">\n    </div>\n    <div class = \"form-group\">\n        <label>Email:</label>\n        <input type=\"text\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\">\n    </div>\n    <div class = \"form-group\">\n        <label>Password:</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\">\n    </div>\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n</form>","import { Injectable } from '@angular/core';\r\nimport {Router, CanActivate} from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuardLoggedIn implements CanActivate{\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router\r\n    ){}\r\n\r\n    canActivate(){\r\n        if(this.authService.loggedIn()){\r\n            this.router.navigate(['profile']);\r\n            return false;\r\n\r\n        }else{\r\n            return true;\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport {Router, CanActivate} from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuardLoggedOut implements CanActivate{\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router\r\n    ){}\r\n\r\n    canActivate(){\r\n        if(this.authService.loggedIn()){\r\n            return true;\r\n\r\n        }else{\r\n            this.router.navigate(['login']);\r\n            return false;\r\n        }\r\n    }\r\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport {RouterModule, Routes} from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service'; \nimport { AuthGuardLoggedOut } from './guards/authLoggedOut.guard';\nimport {AuthGuardLoggedIn } from './guards/authLoggedIn.guard';\n\n\nconst appRoutes: Routes = [\n  {path : '', component: HomeComponent},\n  {path : 'register', component: RegisterComponent, canActivate: [AuthGuardLoggedIn]},\n  {path : 'login', component: LoginComponent, canActivate: [AuthGuardLoggedIn]},\n  {path : 'dashboard', component: DashboardComponent, canActivate: [AuthGuardLoggedOut]},\n  {path : 'profile', component: ProfileComponent, canActivate: [AuthGuardLoggedOut]}\n\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n \n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,    \n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot()\n  ],\n  providers: [ValidateService, AuthService, AuthGuardLoggedOut, AuthGuardLoggedIn],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    if(user.name == undefined || user.username == undefined || user.email == undefined || user.password == undefined ){\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n  validateEmail(email){\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(    \n    private flashMessage: FlashMessagesService,\n    public authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.flashMessage.show('You have successfully Logged Out.', {cssClass: 'alert-success', timeout:3000});\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark sticky\">\n    <a class=\"navbar-brand\" href=\"#\">MEAN Try App</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] = \"{exact:true}\" ><a class=\"nav-link\" [routerLink] = \"['/']\">Home <span></span></a></li>\n        </ul>\n        <ul class=\"navbar-nav ml-auto\">\n            <li *ngIf = \"!authService.loggedIn()\" class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] = \"{exact:true}\" ><a class=\"nav-link\" [routerLink] = \"['/login']\">Login </a></li>\n            <li *ngIf = \"!authService.loggedIn()\" class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] = \"{exact:true}\" ><a class=\"nav-link\" [routerLink] = \"['/register']\">Register </a></li>\n            <li *ngIf = \"authService.loggedIn()\" class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] = \"{exact:true}\" ><a class=\"nav-link\" [routerLink] = \"['/dashboard']\">Dashboard </a></li>\n            <li *ngIf = \"authService.loggedIn()\" class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] = \"{exact:true}\" ><a class=\"nav-link\" [routerLink] = \"['/profile']\">Profile </a></li>\n            <li *ngIf = \"authService.loggedIn()\" class=\"nav-item\" ><a (click) = \"onLogoutClick()\" class=\"nav-link\" href=\"#\" >Logout </a></li>\n\n        </ul>\n    </div><!--/.nav-collapse -->\n\n</nav>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport { ObserveOnOperator } from 'rxjs/internal/operators/observeOn';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\n\nexport class AuthService {\n\n  authToken: any;\n  user: any;\n\n\n  constructor(\n    private http: HttpClient\n    ) {   }\n\n  registerUser(user){\n    let headers = new HttpHeaders({'Content-Type': 'application/json'});\n    \n    \n    return this.http.post<any>(\n      \"http://localhost:5000/users/register\",\n      user,\n      {headers: headers}\n    ).pipe(map(res => res));\n\n  }\n\n  authenticateUser(user){\n    let headers = new HttpHeaders({'Content-Type': 'application/json'});\n    \n    \n    return this.http.post<any>(\n      \"http://localhost:5000/users/authenticate\",\n      user,\n      {headers: headers}\n    ).pipe(map(res => res));\n  }\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  getProfile(){\n    this.loadToken();\n    let headers = new HttpHeaders({'Authorization':this.authToken, 'Content-Type': 'application/json'});\n    return this.http.get<any>(\n      \"http://localhost:5000/users/profile\",\n      {headers: headers}\n    ).pipe(map(res => res));\n\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn(){\n    this.loadToken();\n    const helper = new JwtHelperService();\n    return !helper.isTokenExpired(this.authToken); //False if Token is good, True if not good\n}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}